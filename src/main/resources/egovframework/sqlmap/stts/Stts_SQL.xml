<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="egovframework.stts.mapper.SttsMapper">
	<select id="getDvsnSttsList" parameterType="java.util.HashMap" resultType="egovframework.stts.model.Ris1201DTO">
		   SELECT IFNULL(B.MDDL_KR_NM, "총 합") AS ROOM_NM,
		          CASE WHEN IFNULL(B.MDDL_KR_NM, "총 합") = "총 합" THEN "총 합계" ELSE IFNULL(C.MDDL_KR_NM, "소 계") END AS DVSN_NM,
		          SUM(CASE WHEN EXTRACT(MONTH FROM PRSC_DATE) = 1 AND EXTRACT(YEAR FROM PRSC_DATE) = #{year} THEN 1 ELSE 0 END) AS JANUARY,
				  SUM(CASE WHEN EXTRACT(MONTH FROM PRSC_DATE) = 2 AND EXTRACT(YEAR FROM PRSC_DATE) = #{year} THEN 1 ELSE 0 END) AS FEBRUARY,
				  SUM(CASE WHEN EXTRACT(MONTH FROM PRSC_DATE) = 3 AND EXTRACT(YEAR FROM PRSC_DATE) = #{year} THEN 1 ELSE 0 END) AS MARCH,
				  SUM(CASE WHEN EXTRACT(MONTH FROM PRSC_DATE) = 4 AND EXTRACT(YEAR FROM PRSC_DATE) = #{year} THEN 1 ELSE 0 END) AS APRIL,
				  SUM(CASE WHEN EXTRACT(MONTH FROM PRSC_DATE) = 5 AND EXTRACT(YEAR FROM PRSC_DATE) = #{year} THEN 1 ELSE 0 END) AS MAY,
				  SUM(CASE WHEN EXTRACT(MONTH FROM PRSC_DATE) = 6 AND EXTRACT(YEAR FROM PRSC_DATE) = #{year} THEN 1 ELSE 0 END) AS JUNE,
				  SUM(CASE WHEN EXTRACT(MONTH FROM PRSC_DATE) = 7 AND EXTRACT(YEAR FROM PRSC_DATE) = #{year} THEN 1 ELSE 0 END) AS JULY,
				  SUM(CASE WHEN EXTRACT(MONTH FROM PRSC_DATE) = 8 AND EXTRACT(YEAR FROM PRSC_DATE) = #{year} THEN 1 ELSE 0 END) AS AUGUST,
				  SUM(CASE WHEN EXTRACT(MONTH FROM PRSC_DATE) = 9 AND EXTRACT(YEAR FROM PRSC_DATE) = #{year} THEN 1 ELSE 0 END) AS SEPTEMBER,
				  SUM(CASE WHEN EXTRACT(MONTH FROM PRSC_DATE) = 10 AND EXTRACT(YEAR FROM PRSC_DATE) = #{year} THEN 1 ELSE 0 END) AS OCTOBER,
				  SUM(CASE WHEN EXTRACT(MONTH FROM PRSC_DATE) = 11 AND EXTRACT(YEAR FROM PRSC_DATE) = #{year} THEN 1 ELSE 0 END) AS NOVEMBER,
				  SUM(CASE WHEN EXTRACT(MONTH FROM PRSC_DATE) = 12 AND EXTRACT(YEAR FROM PRSC_DATE) = #{year} THEN 1 ELSE 0 END) AS DECEMBER,
				  SUM(CASE WHEN EXTRACT(MONTH FROM PRSC_DATE) BETWEEN 1 AND 12 AND EXTRACT(YEAR FROM PRSC_DATE) = #{year} THEN 1 ELSE 0 END) AS TOTAL,
				  SUM(CASE WHEN EXTRACT(MONTH FROM PRSC_DATE) = 1 AND EXTRACT(YEAR FROM PRSC_DATE) = #{lastYear} THEN 1 ELSE 0 END) AS JANUARY_LAST_YEAR,
				  SUM(CASE WHEN EXTRACT(MONTH FROM PRSC_DATE) = 2 AND EXTRACT(YEAR FROM PRSC_DATE) = #{lastYear} THEN 1 ELSE 0 END) AS FEBRUARY_LAST_YEAR,
				  SUM(CASE WHEN EXTRACT(MONTH FROM PRSC_DATE) = 3 AND EXTRACT(YEAR FROM PRSC_DATE) = #{lastYear} THEN 1 ELSE 0 END) AS MARCH_LAST_YEAR,
				  SUM(CASE WHEN EXTRACT(MONTH FROM PRSC_DATE) = 4 AND EXTRACT(YEAR FROM PRSC_DATE) = #{lastYear} THEN 1 ELSE 0 END) AS APRIL_LAST_YEAR,
				  SUM(CASE WHEN EXTRACT(MONTH FROM PRSC_DATE) = 5 AND EXTRACT(YEAR FROM PRSC_DATE) = #{lastYear} THEN 1 ELSE 0 END) AS MAY_LAST_YEAR,
				  SUM(CASE WHEN EXTRACT(MONTH FROM PRSC_DATE) = 6 AND EXTRACT(YEAR FROM PRSC_DATE) = #{lastYear} THEN 1 ELSE 0 END) AS JUNE_LAST_YEAR,
				  SUM(CASE WHEN EXTRACT(MONTH FROM PRSC_DATE) = 7 AND EXTRACT(YEAR FROM PRSC_DATE) = #{lastYear} THEN 1 ELSE 0 END) AS JULY_LAST_YEAR,
				  SUM(CASE WHEN EXTRACT(MONTH FROM PRSC_DATE) = 8 AND EXTRACT(YEAR FROM PRSC_DATE) = #{lastYear} THEN 1 ELSE 0 END) AS AUGUST_LAST_YEAR,
				  SUM(CASE WHEN EXTRACT(MONTH FROM PRSC_DATE) = 9 AND EXTRACT(YEAR FROM PRSC_DATE) = #{lastYear} THEN 1 ELSE 0 END) AS SEPTEMBER_LAST_YEAR,
				  SUM(CASE WHEN EXTRACT(MONTH FROM PRSC_DATE) = 10 AND EXTRACT(YEAR FROM PRSC_DATE) = #{lastYear} THEN 1 ELSE 0 END) AS OCTOBER_LAST_YEAR,
				  SUM(CASE WHEN EXTRACT(MONTH FROM PRSC_DATE) = 11 AND EXTRACT(YEAR FROM PRSC_DATE) = #{lastYear} THEN 1 ELSE 0 END) AS NOVEMBER_LAST_YEAR,
				  SUM(CASE WHEN EXTRACT(MONTH FROM PRSC_DATE) = 12 AND EXTRACT(YEAR FROM PRSC_DATE) = #{lastYear} THEN 1 ELSE 0 END) AS DECEMBER_LAST_YEAR,
				  SUM(CASE WHEN EXTRACT(MONTH FROM PRSC_DATE) BETWEEN 1 AND 12 AND EXTRACT(YEAR FROM PRSC_DATE) = #{lastYear} THEN 1 ELSE 0 END) AS TOTAL_LAST_YEAR
		     FROM ris1201 A
		LEFT JOIN ris0102 B
		       ON B.HSPT_ID = 'A001' AND B.LRGC_CD = "IMGN_ROOM_CD" AND A.IMGN_ROOM_CD = B.MDDL_CD
		LEFT JOIN ris0102 C
		       ON C.HSPT_ID = 'A001' AND C.LRGC_CD = "IMGN_DVSN_CD" AND A.ORDR_BDYP_CD = C.MDDL_CD
		    <where>
		          A.HSPT_ID = 'A001' AND (EXTRACT(YEAR FROM A.PRSC_DATE) = #{year} OR EXTRACT(YEAR FROM A.PRSC_DATE) = #{lastYear})
	    	    <if test="dvsn != 'all'">
	              AND A.ORDR_BDYP_CD = #{dvsn}
	            </if>
		    	<if test="room != 'all'">
		          AND A.IMGN_ROOM_CD = #{room}
		        </if>
            </where>
	     GROUP BY B.MDDL_KR_NM, C.MDDL_KR_NM WITH ROLLUP;
	</select>
	
	<select id="getEqpmSttsList" parameterType="java.util.HashMap" resultType="egovframework.stts.model.Ris1201DTO">
		   SELECT IFNULL(C.MDDL_KR_NM, "총 합") AS DVSN_NM,
		          CASE WHEN IFNULL(C.MDDL_KR_NM, "총 합") = "총 합" THEN "총 합계" ELSE IFNULL(B.MDDL_KR_NM, "소 계") END AS EQPM_NM,
		          SUM(CASE WHEN EXTRACT(MONTH FROM PRSC_DATE) = 1 AND EXTRACT(YEAR FROM PRSC_DATE) = #{year} THEN 1 ELSE 0 END) AS JANUARY,
				  SUM(CASE WHEN EXTRACT(MONTH FROM PRSC_DATE) = 2 AND EXTRACT(YEAR FROM PRSC_DATE) = #{year} THEN 1 ELSE 0 END) AS FEBRUARY,
				  SUM(CASE WHEN EXTRACT(MONTH FROM PRSC_DATE) = 3 AND EXTRACT(YEAR FROM PRSC_DATE) = #{year} THEN 1 ELSE 0 END) AS MARCH,
				  SUM(CASE WHEN EXTRACT(MONTH FROM PRSC_DATE) = 4 AND EXTRACT(YEAR FROM PRSC_DATE) = #{year} THEN 1 ELSE 0 END) AS APRIL,
				  SUM(CASE WHEN EXTRACT(MONTH FROM PRSC_DATE) = 5 AND EXTRACT(YEAR FROM PRSC_DATE) = #{year} THEN 1 ELSE 0 END) AS MAY,
				  SUM(CASE WHEN EXTRACT(MONTH FROM PRSC_DATE) = 6 AND EXTRACT(YEAR FROM PRSC_DATE) = #{year} THEN 1 ELSE 0 END) AS JUNE,
				  SUM(CASE WHEN EXTRACT(MONTH FROM PRSC_DATE) = 7 AND EXTRACT(YEAR FROM PRSC_DATE) = #{year} THEN 1 ELSE 0 END) AS JULY,
				  SUM(CASE WHEN EXTRACT(MONTH FROM PRSC_DATE) = 8 AND EXTRACT(YEAR FROM PRSC_DATE) = #{year} THEN 1 ELSE 0 END) AS AUGUST,
				  SUM(CASE WHEN EXTRACT(MONTH FROM PRSC_DATE) = 9 AND EXTRACT(YEAR FROM PRSC_DATE) = #{year} THEN 1 ELSE 0 END) AS SEPTEMBER,
				  SUM(CASE WHEN EXTRACT(MONTH FROM PRSC_DATE) = 10 AND EXTRACT(YEAR FROM PRSC_DATE) = #{year} THEN 1 ELSE 0 END) AS OCTOBER,
				  SUM(CASE WHEN EXTRACT(MONTH FROM PRSC_DATE) = 11 AND EXTRACT(YEAR FROM PRSC_DATE) = #{year} THEN 1 ELSE 0 END) AS NOVEMBER,
				  SUM(CASE WHEN EXTRACT(MONTH FROM PRSC_DATE) = 12 AND EXTRACT(YEAR FROM PRSC_DATE) = #{year} THEN 1 ELSE 0 END) AS DECEMBER,
				  SUM(CASE WHEN EXTRACT(MONTH FROM PRSC_DATE) BETWEEN 1 AND 12 AND EXTRACT(YEAR FROM PRSC_DATE) = #{year} THEN 1 ELSE 0 END) AS TOTAL,
				  SUM(CASE WHEN EXTRACT(MONTH FROM PRSC_DATE) = 1 AND EXTRACT(YEAR FROM PRSC_DATE) = #{lastYear} THEN 1 ELSE 0 END) AS JANUARY_LAST_YEAR,
				  SUM(CASE WHEN EXTRACT(MONTH FROM PRSC_DATE) = 2 AND EXTRACT(YEAR FROM PRSC_DATE) = #{lastYear} THEN 1 ELSE 0 END) AS FEBRUARY_LAST_YEAR,
				  SUM(CASE WHEN EXTRACT(MONTH FROM PRSC_DATE) = 3 AND EXTRACT(YEAR FROM PRSC_DATE) = #{lastYear} THEN 1 ELSE 0 END) AS MARCH_LAST_YEAR,
				  SUM(CASE WHEN EXTRACT(MONTH FROM PRSC_DATE) = 4 AND EXTRACT(YEAR FROM PRSC_DATE) = #{lastYear} THEN 1 ELSE 0 END) AS APRIL_LAST_YEAR,
				  SUM(CASE WHEN EXTRACT(MONTH FROM PRSC_DATE) = 5 AND EXTRACT(YEAR FROM PRSC_DATE) = #{lastYear} THEN 1 ELSE 0 END) AS MAY_LAST_YEAR,
				  SUM(CASE WHEN EXTRACT(MONTH FROM PRSC_DATE) = 6 AND EXTRACT(YEAR FROM PRSC_DATE) = #{lastYear} THEN 1 ELSE 0 END) AS JUNE_LAST_YEAR,
				  SUM(CASE WHEN EXTRACT(MONTH FROM PRSC_DATE) = 7 AND EXTRACT(YEAR FROM PRSC_DATE) = #{lastYear} THEN 1 ELSE 0 END) AS JULY_LAST_YEAR,
				  SUM(CASE WHEN EXTRACT(MONTH FROM PRSC_DATE) = 8 AND EXTRACT(YEAR FROM PRSC_DATE) = #{lastYear} THEN 1 ELSE 0 END) AS AUGUST_LAST_YEAR,
				  SUM(CASE WHEN EXTRACT(MONTH FROM PRSC_DATE) = 9 AND EXTRACT(YEAR FROM PRSC_DATE) = #{lastYear} THEN 1 ELSE 0 END) AS SEPTEMBER_LAST_YEAR,
				  SUM(CASE WHEN EXTRACT(MONTH FROM PRSC_DATE) = 10 AND EXTRACT(YEAR FROM PRSC_DATE) = #{lastYear} THEN 1 ELSE 0 END) AS OCTOBER_LAST_YEAR,
				  SUM(CASE WHEN EXTRACT(MONTH FROM PRSC_DATE) = 11 AND EXTRACT(YEAR FROM PRSC_DATE) = #{lastYear} THEN 1 ELSE 0 END) AS NOVEMBER_LAST_YEAR,
				  SUM(CASE WHEN EXTRACT(MONTH FROM PRSC_DATE) = 12 AND EXTRACT(YEAR FROM PRSC_DATE) = #{lastYear} THEN 1 ELSE 0 END) AS DECEMBER_LAST_YEAR,
				  SUM(CASE WHEN EXTRACT(MONTH FROM PRSC_DATE) BETWEEN 1 AND 12 AND EXTRACT(YEAR FROM PRSC_DATE) = #{lastYear} THEN 1 ELSE 0 END) AS TOTAL_LAST_YEAR
		     FROM ris1201 A
		LEFT JOIN ris0102 B
		       ON B.HSPT_ID = 'A001' AND B.LRGC_CD = "IMGN_EQPM_CD" AND A.IMGN_ROOM_CD = B.MDDL_CD
		LEFT JOIN ris0102 C
		       ON C.HSPT_ID = 'A001' AND C.LRGC_CD = "IMGN_DVSN_CD" AND A.ORDR_BDYP_CD = C.MDDL_CD
		    <where>
		          A.HSPT_ID = 'A001' AND (EXTRACT(YEAR FROM A.PRSC_DATE) = #{year} OR EXTRACT(YEAR FROM A.PRSC_DATE) = #{lastYear})
	    	    <if test="dvsn != 'all'">
	              AND A.ORDR_BDYP_CD = #{dvsn}
	            </if>
		    	<if test="eqpm != 'all'">
		          AND A.IMGN_ROOM_CD = #{eqpm}
		        </if>
            </where>
	     GROUP BY C.MDDL_KR_NM, B.MDDL_KR_NM WITH ROLLUP;
	</select>
	
	<select id="getViewDocSttsList" parameterType="java.util.HashMap" resultType="egovframework.stts.model.Ris1201DTO">
		   SELECT IFNULL(B.LOGIN_NM, "총 합") AS VIEW_DOC_NM,
		          CASE WHEN IFNULL(B.LOGIN_NM, "총 합") = "총 합" THEN "총 합계" ELSE IFNULL(C.MDDL_KR_NM, "소 계") END AS DVSN_NM,
		          SUM(CASE WHEN EXTRACT(MONTH FROM VIEW_DATE) = 1 AND EXTRACT(YEAR FROM VIEW_DATE) = #{year} THEN 1 ELSE 0 END) AS JANUARY,
				  SUM(CASE WHEN EXTRACT(MONTH FROM VIEW_DATE) = 2 AND EXTRACT(YEAR FROM VIEW_DATE) = #{year} THEN 1 ELSE 0 END) AS FEBRUARY,
				  SUM(CASE WHEN EXTRACT(MONTH FROM VIEW_DATE) = 3 AND EXTRACT(YEAR FROM VIEW_DATE) = #{year} THEN 1 ELSE 0 END) AS MARCH,
				  SUM(CASE WHEN EXTRACT(MONTH FROM VIEW_DATE) = 4 AND EXTRACT(YEAR FROM VIEW_DATE) = #{year} THEN 1 ELSE 0 END) AS APRIL,
				  SUM(CASE WHEN EXTRACT(MONTH FROM VIEW_DATE) = 5 AND EXTRACT(YEAR FROM VIEW_DATE) = #{year} THEN 1 ELSE 0 END) AS MAY,
				  SUM(CASE WHEN EXTRACT(MONTH FROM VIEW_DATE) = 6 AND EXTRACT(YEAR FROM VIEW_DATE) = #{year} THEN 1 ELSE 0 END) AS JUNE,
				  SUM(CASE WHEN EXTRACT(MONTH FROM VIEW_DATE) = 7 AND EXTRACT(YEAR FROM VIEW_DATE) = #{year} THEN 1 ELSE 0 END) AS JULY,
				  SUM(CASE WHEN EXTRACT(MONTH FROM VIEW_DATE) = 8 AND EXTRACT(YEAR FROM VIEW_DATE) = #{year} THEN 1 ELSE 0 END) AS AUGUST,
				  SUM(CASE WHEN EXTRACT(MONTH FROM VIEW_DATE) = 9 AND EXTRACT(YEAR FROM VIEW_DATE) = #{year} THEN 1 ELSE 0 END) AS SEPTEMBER,
				  SUM(CASE WHEN EXTRACT(MONTH FROM VIEW_DATE) = 10 AND EXTRACT(YEAR FROM VIEW_DATE) = #{year} THEN 1 ELSE 0 END) AS OCTOBER,
				  SUM(CASE WHEN EXTRACT(MONTH FROM VIEW_DATE) = 11 AND EXTRACT(YEAR FROM VIEW_DATE) = #{year} THEN 1 ELSE 0 END) AS NOVEMBER,
				  SUM(CASE WHEN EXTRACT(MONTH FROM VIEW_DATE) = 12 AND EXTRACT(YEAR FROM VIEW_DATE) = #{year} THEN 1 ELSE 0 END) AS DECEMBER,
				  SUM(CASE WHEN EXTRACT(MONTH FROM VIEW_DATE) BETWEEN 1 AND 12 AND EXTRACT(YEAR FROM VIEW_DATE) = #{year} THEN 1 ELSE 0 END) AS TOTAL,
				  SUM(CASE WHEN EXTRACT(MONTH FROM VIEW_DATE) = 1 AND EXTRACT(YEAR FROM VIEW_DATE) = #{lastYear} THEN 1 ELSE 0 END) AS JANUARY_LAST_YEAR,
				  SUM(CASE WHEN EXTRACT(MONTH FROM VIEW_DATE) = 2 AND EXTRACT(YEAR FROM VIEW_DATE) = #{lastYear} THEN 1 ELSE 0 END) AS FEBRUARY_LAST_YEAR,
				  SUM(CASE WHEN EXTRACT(MONTH FROM VIEW_DATE) = 3 AND EXTRACT(YEAR FROM VIEW_DATE) = #{lastYear} THEN 1 ELSE 0 END) AS MARCH_LAST_YEAR,
				  SUM(CASE WHEN EXTRACT(MONTH FROM VIEW_DATE) = 4 AND EXTRACT(YEAR FROM VIEW_DATE) = #{lastYear} THEN 1 ELSE 0 END) AS APRIL_LAST_YEAR,
				  SUM(CASE WHEN EXTRACT(MONTH FROM VIEW_DATE) = 5 AND EXTRACT(YEAR FROM VIEW_DATE) = #{lastYear} THEN 1 ELSE 0 END) AS MAY_LAST_YEAR,
				  SUM(CASE WHEN EXTRACT(MONTH FROM VIEW_DATE) = 6 AND EXTRACT(YEAR FROM VIEW_DATE) = #{lastYear} THEN 1 ELSE 0 END) AS JUNE_LAST_YEAR,
				  SUM(CASE WHEN EXTRACT(MONTH FROM VIEW_DATE) = 7 AND EXTRACT(YEAR FROM VIEW_DATE) = #{lastYear} THEN 1 ELSE 0 END) AS JULY_LAST_YEAR,
				  SUM(CASE WHEN EXTRACT(MONTH FROM VIEW_DATE) = 8 AND EXTRACT(YEAR FROM VIEW_DATE) = #{lastYear} THEN 1 ELSE 0 END) AS AUGUST_LAST_YEAR,
				  SUM(CASE WHEN EXTRACT(MONTH FROM VIEW_DATE) = 9 AND EXTRACT(YEAR FROM VIEW_DATE) = #{lastYear} THEN 1 ELSE 0 END) AS SEPTEMBER_LAST_YEAR,
				  SUM(CASE WHEN EXTRACT(MONTH FROM VIEW_DATE) = 10 AND EXTRACT(YEAR FROM VIEW_DATE) = #{lastYear} THEN 1 ELSE 0 END) AS OCTOBER_LAST_YEAR,
				  SUM(CASE WHEN EXTRACT(MONTH FROM VIEW_DATE) = 11 AND EXTRACT(YEAR FROM VIEW_DATE) = #{lastYear} THEN 1 ELSE 0 END) AS NOVEMBER_LAST_YEAR,
				  SUM(CASE WHEN EXTRACT(MONTH FROM VIEW_DATE) = 12 AND EXTRACT(YEAR FROM VIEW_DATE) = #{lastYear} THEN 1 ELSE 0 END) AS DECEMBER_LAST_YEAR,
				  SUM(CASE WHEN EXTRACT(MONTH FROM VIEW_DATE) BETWEEN 1 AND 12 AND EXTRACT(YEAR FROM VIEW_DATE) = #{lastYear} THEN 1 ELSE 0 END) AS TOTAL_LAST_YEAR
		     FROM ris1201 A
        <!-- 판독의 조인 -->
		LEFT JOIN risuser B
		       ON B.HSPT_ID = 'A001' AND A.VIEW_DOC_ID = B.LOGIN_ID
		<!-- 촬영구분 조인 -->
		LEFT JOIN ris0102 C
		       ON C.HSPT_ID = 'A001' AND C.LRGC_CD = "IMGN_DVSN_CD" AND A.ORDR_BDYP_CD = C.MDDL_CD
		    <where>
		          A.HSPT_ID = 'A001' AND A.VIEW_DOC_ID IS NOT NULL AND A.VIEW_DOC_ID != '' AND (EXTRACT(YEAR FROM A.VIEW_DATE) = #{year} OR EXTRACT(YEAR FROM A.VIEW_DATE) = #{lastYear})
	    	    <if test="viewDoc != 'all'">
	              AND A.VIEW_DOC_ID = #{viewDoc}
	            </if>
		    	<if test="dvsn != 'all'">
		          AND A.ORDR_BDYP_CD = #{dvsn}
		        </if>
            </where>
	     GROUP BY A.VIEW_DOC_ID, C.MDDL_KR_NM WITH ROLLUP;
	</select>
	
	<select id="getRisDvsnList" resultType="egovframework.stts.model.Ris0102DTO">
		SELECT MDDL_CD, MDDL_KR_NM
		  FROM ris0102
		 WHERE HSPT_ID = "A001" AND LRGC_CD = "IMGN_DVSN_CD";
	</select>
	
	<select id="getRisRoomList" resultType="egovframework.stts.model.Ris0102DTO">
		SELECT MDDL_CD, MDDL_KR_NM
		  FROM ris0102
		 WHERE HSPT_ID = "A001" AND LRGC_CD = "IMGN_ROOM_CD";
	</select>
	
	<select id="getRisEqpmList" resultType="egovframework.stts.model.Ris0102DTO">
		SELECT MDDL_CD, MDDL_KR_NM
		  FROM ris0102
		 WHERE HSPT_ID = "A001" AND LRGC_CD = "IMGN_EQPM_CD";
	</select>
	
	<select id="getRisViewDocList" resultType="egovframework.stts.model.RisViewDocDTO">
		SELECT DISTINCT A.VIEW_DOC_ID, B.LOGIN_NM
		  FROM ris1201 A
		  JOIN risuser B
		    ON B.HSPT_ID = 'A001' AND A.VIEW_DOC_ID = B.LOGIN_ID;
	</select>
	
	
</mapper>