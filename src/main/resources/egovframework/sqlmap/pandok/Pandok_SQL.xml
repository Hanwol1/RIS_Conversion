<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="egovframework.pandok.mapper.PandokMapper">
	<select id="getRis0601List" parameterType="java.util.HashMap" resultType="egovframework.pandok.model.Ris0601DTO">
		SELECT DOC_ID, TMPL_CD, IMGN_DVSN_CD, B.MDDL_KR_NM, VIEW_ABBR_NM, VIEW_TEXT
          FROM ris0601 A
          JOIN ris0102 B
            ON B.LRGC_CD = "IMGN_DVSN_CD" AND A.IMGN_DVSN_CD = B.MDDL_CD
         <where>B.HSPT_ID = #{hsptId}
         	<if test="imgnDvsn != 'all'">
         		AND A.IMGN_DVSN_CD = #{imgnDvsn}
         	</if>
         	<if test="docId != 'all'">
         		AND DOC_ID = #{docId}
         	</if>
         </where>;
	</select>
	
	<select id="getRis0102List" parameterType="java.lang.String" resultType="egovframework.pandok.model.Ris0102DTO">
		SELECT MDDL_CD, MDDL_KR_NM
		  FROM ris0102
		 WHERE HSPT_ID = #{hsptId} AND LRGC_CD = "IMGN_DVSN_CD"; 
	</select>
	
	<select id="getRisUserList" parameterType="java.lang.String" resultType="egovframework.pandok.model.RisUserDTO">
		SELECT LOGIN_ID, LOGIN_NM
		  FROM risuser
		 WHERE HSPT_ID = #{hsptId};
	</select>
	
	<select id="getRis1301List" parameterType="java.util.HashMap" resultType="egovframework.pandok.model.Ris1301DTO">
		SELECT A.HSPT_ID,
			   A.ORDR_FK, 
			   B.PTNT_ID, 
			   B.PTNT_NM, 
			   B.ORDR_DATE, 
			   B.PRSC_DATE, 
			   B.ORDR_NM, 
			   C.MDDL_CD AS IMGN_DVSN_CD,
			   A.VIST_DVSN,
			   D.MDDL_KR_NM AS VIST_DVSN_NM,
			   B.TRTM_DPRT_CD,
			   E.MDDL_KR_NM AS TRTM_DPRT_NM,
			   B.ORDR_DOC_ID,
			   F.MDDL_KR_NM AS ORDR_DOC_NM,
			   CASE
		       		WHEN A.VIEW_DTTM IS NOT NULL THEN 'Y'
		       		ELSE 'N'
		       END AS VIEW_YN,
			   CASE
		       		WHEN A.VIEW_DTTM IS NOT NULL THEN A.VIEW_DATE
		       		ELSE NULL
		       END AS VIEW_DATE,
			   CASE
		       		WHEN A.VIEW_DTTM IS NOT NULL THEN TIME(A.VIEW_DTTM)
		       		ELSE NULL
		       END AS VIEW_TIME,
			   A.VIEW_DOC_ID,
			   G.LOGIN_NM AS VIEW_DOC_NM,
			   A.RDLG_ID,
			   G.LOGIN_NM AS RDLG_NM,
			   CASE
			   		WHEN A.VOIC_RGST_DTTM IS NOT NULL OR VOIC_VIEW_YN = 'Y' THEN 'Y'
			   		ELSE 'N'
			   END AS VOIC_VIEW_YN,
			   RDLG_ID,
			   B.ORDR_PRGR_DVSN,
			   CASE
					WHEN B.ORDR_PRGR_DVSN = '0' THEN '처방'
					WHEN B.ORDR_PRGR_DVSN = '1' THEN '예약'
					WHEN B.ORDR_PRGR_DVSN = '2' THEN '접수'
					WHEN B.ORDR_PRGR_DVSN = '3' THEN '실시'
					WHEN B.ORDR_PRGR_DVSN = '4' THEN '음성판독'
					WHEN B.ORDR_PRGR_DVSN = '5' THEN '판독 임시 저장'
					WHEN B.ORDR_PRGR_DVSN = '6' THEN '판독완료'
					WHEN B.ORDR_PRGR_DVSN = '8' THEN '보류'
					WHEN B.ORDR_PRGR_DVSN = '9' THEN '취소'
			   END AS ORDR_PRGR_KR,
			   VIEW_TEXT,
			   VIEW_NOTE_TEXT
		  FROM ris1301 A
	 LEFT JOIN ris1201 B
		    ON A.ORDR_FK = B.ORDR_FK AND B.HSPT_ID = #{hsptId}
	 LEFT JOIN ris0102 C
		    ON C.LRGC_CD = "IMGN_DVSN_CD" AND B.ORDR_BDYP_CD = C.MDDL_CD AND C.HSPT_ID = #{hsptId}
	 LEFT JOIN ris0102 D
		    ON A.VIST_DVSN = D.MDDL_CD AND D.HSPT_ID = #{hsptId} AND D.LRGC_CD = "VIST_DVSN_CD"
	 LEFT JOIN ris0102 E
		    ON B.TRTM_DPRT_CD = E.MDDL_CD AND E.HSPT_ID = #{hsptId} AND E.LRGC_CD = "GWA_LIST"
	 LEFT JOIN ris0102 F
		    ON B.ORDR_DOC_ID = F.MDDL_CD AND F.HSPT_ID = #{hsptId} AND F.LRGC_CD = "DOCTORLIST"
  	 LEFT JOIN risuser G
		    ON A.VIEW_DOC_ID = G.LOGIN_ID AND G.HSPT_ID = #{hsptId}
	   <where> A.HSPT_ID = #{hsptId}
       	   <choose>
       	     <when test="viewYn == 'doneView'">
       	       AND A.VIEW_DTTM IS NOT NULL
       	     </when>
       	     <when test="viewYn == 'notView'">
       	       AND A.VIEW_DTTM IS NULL
       	     </when>
       	   </choose>
	       <if test="startDate != null and startDate != ''">
	           AND B.PRSC_DATE >= #{startDate}
	       </if>
	       <if test="endDate != null and endDate != ''">
	           AND #{endDate} >= B.PRSC_DATE 
	       </if>
	       <if test="ris1301Dvsn != null and ris1301Dvsn != 'all'">
	           AND C.MDDL_CD = #{ris1301Dvsn}
	       </if>
	       <if test="ptntId != null and ptntId != ''">
	           AND B.PTNT_ID = #{ptntId}
	       </if>
	       <choose>
       	     <when test="voicViewYn == 'doneView'">
       	       AND VOIC_VIEW_YN = 'Y'
       	     </when>
       	     <when test="voicViewYn == 'notView'">
       	       AND (VOIC_VIEW_YN != 'Y' OR VOIC_VIEW_YN IS NULL)
       	     </when>
       	   </choose>
	   </where>;
	</select>
	
	<select id="getRis1101List" resultType="egovframework.pandok.model.Ris1101DTO">
		SELECT HSPT_ID, PTNT_ID, PTNT_KR_NM, BRTH, GNDR_DVSN, TIMESTAMPDIFF(YEAR, BRTH, CURDATE()) + 1 AS AGE
		  FROM ris1101
		 WHERE HSPT_ID = "A001"
	</select>
	
	
	<select id="duplicateCheck" resultType="int">
		SELECT COUNT(*)
		  FROM ris0601
		 WHERE HSPT_ID = #{hsptId} AND
		       DOC_ID = #{docId} AND
		       TMPL_CD = #{tmplCd}
	</select>
	
	<insert id="saveRis0601List">
		<choose>
			<when test="flag == '입력'">
				INSERT INTO ris0601 (
					HSPT_ID,
					DOC_ID,
					TMPL_CD,
					IMGN_DVSN_CD,
					VIEW_ABBR_NM,
					VIEW_TEXT,
					RGST_ID,
					RGST_DTTM
				) VALUES (
					#{hsptId},
					#{docId},
					#{tmplCd},
					#{imgnDvsnCd},
					#{viewAbbrNm},
					#{viewText},
					#{loginId},
					NOW()
				)
			</when>
			<when test="flag == '수정'">
				UPDATE ris0601 SET
					   IMGN_DVSN_CD = #{imgnDvsnCd},
					   VIEW_ABBR_NM = #{viewAbbrNm},
					   VIEW_TEXT = #{viewText},
					   MDFC_ID = #{loginId},
					   MDFC_DTTM = NOW()
				 WHERE HSPT_ID = #{hsptId} AND
				 	   DOC_ID = #{docId} AND
				 	   TMPL_CD = #{tmplCd} 
			</when>
			<when test="flag == '삭제'">
				DELETE FROM ris0601
				 WHERE HSPT_ID = #{hsptId} AND
				 	   DOC_ID = #{docId} AND
				 	   TMPL_CD = #{tmplCd} 
			</when>
		</choose>
	</insert>
	
	<update id="saveTempRis1301List" parameterType="egovframework.pandok.model.Ris1301DTO">
		UPDATE ris1301 
		   SET VIEW_TEXT = #{viewText},
		   	   MDFC_ID = #{mdfcId},
		   	   MDFC_DTTM = NOW(),
			   VOIC_VIEW_YN = 
			   CASE 
			       WHEN #{voicViewYn} = 'Y' THEN 'Y'
	               ELSE VOIC_VIEW_YN
	           END,
			   VOIC_RGST_DTTM = 
			   CASE
			       WHEN #{voicViewYn} = 'Y' THEN NOW()
			       ELSE VOIC_RGST_DTTM
			   END,
			   VOIC_VIEW_FILE_NM = 
			   CASE
			       WHEN #{voicViewYn} = 'Y' THEN #{voicViewFileNm}
			       ELSE VOIC_VIEW_FILE_NM
			   END,
			   VOIC_VIEW_DRTR_NM = 
			   CASE WHEN #{voicViewYn} = 'Y' THEN #{voicViewDrtrNm}
			       ELSE VOIC_VIEW_DRTR_NM
			   END,
			   VOIC_FILE_NM = 
			   CASE
			       WHEN #{voicViewYn} = 'Y' THEN #{voicFileNm}
			       ELSE VOIC_FILE_NM
			   END
	 	 WHERE HSPT_ID = #{hsptId} AND 
	 	 	   VIST_DVSN = #{vistDvsn} AND 
	 	 	   ORDR_FK = #{ordrFk};
	</update>
	
	<update id="saveTempRis1201List" parameterType="egovframework.pandok.model.Ris1201DTO">	
		UPDATE ris1201
		   SET ORDR_PRGR_DVSN = '5',
		       MDFC_ID = #{mdfcId},
		       MDFC_DTTM = NOW()
		 WHERE HSPT_ID = #{hsptId} AND
		 	   PKRIS1201 = #{pkris1201} AND
		 	   ORDR_FK = #{ordrFk};
	</update>
	
	<update id="voiceRis1201List" parameterType="egovframework.pandok.model.Ris1201DTO">	
		UPDATE ris1201
		   SET ORDR_PRGR_DVSN = '4',
		       MDFC_ID = #{mdfcId},
		       MDFC_DTTM = NOW()
		 WHERE HSPT_ID = #{hsptId} AND
		 	   PKRIS1201 = #{pkris1201} AND
		 	   ORDR_FK = #{ordrFk};
	</update>
	
	<select id="voiceDownload" parameterType="egovframework.pandok.model.Ris1301DTO" resultType="java.util.HashMap">
		SELECT VOIC_VIEW_DRTR_NM, VOIC_FILE_NM
		  FROM ris1301
		 WHERE HSPT_ID = #{hsptId} AND
		       VIST_DVSN = #{vistDvsn} AND
		       ORDR_FK = #{ordrFk};
	</select>
	
	<update id="finishRis1301List" parameterType="egovframework.pandok.model.Ris1301DTO">
		UPDATE ris1301 
		   SET VIEW_TEXT = NULL,
			   VIEW_NOTE_TEXT = 
			   CASE
			       WHEN #{voicViewYn} = 'Y' THEN CONCAT(VIEW_NOTE_TEXT, '\n\n', NOW(), '\n[음성판독]')
			       ELSE CONCAT(VIEW_NOTE_TEXT, '\n\n', NOW(), '\n', #{viewText})
			   END,
			   VIEW_DOC_ID = #{mdfcId},
		       VIEW_DATE = CURDATE(),
		       VIEW_DTTM = NOW(),
		       MDFC_ID = #{mdfcId},
		   	   MDFC_DTTM = NOW()
		 WHERE HSPT_ID = #{hsptId} AND
		       VIST_DVSN = #{vistDvsn} AND
		       ORDR_FK = #{ordrFk};
	</update>
	
	<update id="finishRis1201List" parameterType="egovframework.pandok.model.Ris1201DTO">	
		UPDATE ris1201
		   SET ORDR_PRGR_DVSN = '6',
		       MDFC_ID = #{mdfcId},
		       MDFC_DTTM = NOW()
		 WHERE HSPT_ID = #{hsptId} AND
		 	   PKRIS1201 = #{pkris1201} AND
		 	   ORDR_FK = #{ordrFk};
	</update>
	
	<update id="deleteRis1301List" parameterType="egovframework.pandok.model.Ris1301DTO">
		UPDATE ris1301 
		   SET VIEW_TEXT = NULL,
		       VIEW_DATE = NULL,
		       VIEW_DTTM = NULL,
		       RDLG_ID = NULL,
		       VIEW_DOC_ID = NULL,
		       VOIC_RGST_DTTM = NULL,
		       VOIC_VIEW_FILE_NM = NULL,
		       VOIC_VIEW_DRTR_NM = NULL,
		       VOIC_FILE_NM = NULL,
		       VOIC_VIEW_YN = NULL,
		       MDFC_ID = #{mdfcId},
		       MDFC_DTTM = NOW()
		 WHERE HSPT_ID = #{hsptId} AND
		       VIST_DVSN = #{vistDvsn} AND
		       ORDR_FK = #{ordrFk};
	</update>
	
	<update id="deleteRis1201List" parameterType="egovframework.pandok.model.Ris1201DTO">	
		UPDATE ris1201
		   SET ORDR_PRGR_DVSN = '3',
		       VIEW_DOC_ID = NULL,
		       VIEW_DATE = NULL,
		       VIEW_DTTM = NULL,
		       MDFC_ID = #{mdfcId},
		       MDFC_DTTM = NOW()
		 WHERE HSPT_ID = #{hsptId} AND
		 	   PKRIS1201 = #{pkris1201} AND
		 	   ORDR_FK = #{ordrFk};
	</update>
</mapper>